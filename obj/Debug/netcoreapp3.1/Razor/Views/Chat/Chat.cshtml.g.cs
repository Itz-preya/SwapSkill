#pragma checksum "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "c9111c0dfce6db2c24f4c57337c15ba1076324b7bd4337412f3666aa820d8062"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_Chat_Chat), @"mvc.1.0.view", @"/Views/Chat/Chat.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\_ViewImports.cshtml"
using SkillSwapApp

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\_ViewImports.cshtml"
using SkillSwapApp.Models

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"c9111c0dfce6db2c24f4c57337c15ba1076324b7bd4337412f3666aa820d8062", @"/Views/Chat/Chat.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"babd06148558f6456ba6e9c5301ac8325547b8bdf195fc8d90f900b28b66ce3d", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_Chat_Chat : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<
#nullable restore
#line 1 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
       IEnumerable<SkillSwapApp.Models.Message>

#line default
#line hidden
#nullable disable
    >
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
  
    ViewData["Title"] = "Chat";

#line default
#line hidden
#nullable disable

            WriteLiteral("\n");
#nullable restore
#line 6 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
  
    var partnerName = (ViewBag.PartnerName as string) ?? "Partner";
    var partnerInitial = string.IsNullOrWhiteSpace(partnerName) ? "?" : partnerName.Trim()[0].ToString().ToUpper();

#line default
#line hidden
#nullable disable

            WriteLiteral("\n");
#nullable restore
#line 11 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
 if (ViewBag.IsReadOnly == true)
{

#line default
#line hidden
#nullable disable

            WriteLiteral("    <div class=\"alert alert-warning\" role=\"alert\" style=\"margin-bottom:10px;\">\n        This conversation is read-only because one of the participants changed their skill. You can still view the history, but sending new messages is disabled.\n    </div>\n");
#nullable restore
#line 16 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
}

#line default
#line hidden
#nullable disable

            WriteLiteral("\n<div class=\"chat-window\">\n    <div class=\"chat-header\">\n        <div class=\"chat-avatar\">");
            Write(
#nullable restore
#line 20 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                  partnerInitial

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("</div>\n        <div class=\"title\">");
            Write(
#nullable restore
#line 21 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                            partnerName

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("</div>\n    </div>\n\n    <div id=\"messagesList\" class=\"messages\">\n");
#nullable restore
#line 25 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
         foreach (var msg in Model)
        {
            var isMe = (string)msg.FromUserId == (string)ViewBag.CurrentUserId;

#line default
#line hidden
#nullable disable

            WriteLiteral("            <div");
            BeginWriteAttribute("class", " class=\"", 922, "\"", 958, 2);
            WriteAttributeValue("", 930, "msg", 930, 3, true);
            WriteAttributeValue(" ", 933, 
#nullable restore
#line 28 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                              isMe ? "me" : "other"

#line default
#line hidden
#nullable disable
            , 934, 24, false);
            EndWriteAttribute();
            WriteLiteral(">\n                <div class=\"bubble\">\n                    <div class=\"text\">");
            Write(
#nullable restore
#line 30 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                       msg.Content

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("</div>\n                    <span class=\"time\">");
            Write(
#nullable restore
#line 31 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                        msg.SentAt.ToLocalTime().ToString("hh:mm tt")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("</span>\n                </div>\n            </div>\n");
#nullable restore
#line 34 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
        }

#line default
#line hidden
#nullable disable

            WriteLiteral("    </div>\n\n    <div class=\"chat-input\">\n        <input type=\"text\" id=\"messageInput\" placeholder=\"Type a message\" autocomplete=\"off\" ");
            Write(
#nullable restore
#line 38 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                                                               ViewBag.IsReadOnly == true ? "disabled" : ""

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(" />\n        <button id=\"sendButton\" ");
            Write(
#nullable restore
#line 39 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                  ViewBag.IsReadOnly == true ? "disabled" : ""

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(">Send</button>\n        <input type=\"hidden\" id=\"requestId\"");
            BeginWriteAttribute("value", " value=\"", 1522, "\"", 1548, 1);
            WriteAttributeValue("", 1530, 
#nullable restore
#line 40 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                    ViewBag.RequestId

#line default
#line hidden
#nullable disable
            , 1530, 18, false);
            EndWriteAttribute();
            WriteLiteral(" />\n        <input type=\"hidden\" id=\"isReadOnly\"");
            BeginWriteAttribute("value", " value=\"", 1597, "\"", 1653, 1);
            WriteAttributeValue("", 1605, 
#nullable restore
#line 41 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                      ViewBag.IsReadOnly == true ? "true" : "false"

#line default
#line hidden
#nullable disable
            , 1605, 48, false);
            EndWriteAttribute();
            WriteLiteral(" />\n        <input type=\"hidden\" id=\"otherUserHidden\"");
            BeginWriteAttribute("value", " value=\"", 1707, "\"", 1735, 1);
            WriteAttributeValue("", 1715, 
#nullable restore
#line 42 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                          ViewBag.OtherUserId

#line default
#line hidden
#nullable disable
            , 1715, 20, false);
            EndWriteAttribute();
            WriteLiteral(" />\n    </div>\n</div>\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\n    <!-- Use CDN for SignalR -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js\"></script>\n\n    <script>\n        // Pass user IDs from Razor into JS variables\n        const currentUserId = \'");
                Write(
#nullable restore
#line 52 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                ViewBag.CurrentUserId

#line default
#line hidden
#nullable disable
                );
                WriteLiteral("\';\n        const otherUserId = \'");
                Write(
#nullable restore
#line 53 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                              ViewBag.OtherUserId

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"';
        const requestId = parseInt(document.getElementById('requestId').value || '0');
        const isReadOnly = document.getElementById('isReadOnly').value === 'true';

        // Create connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl(""/chatHub"")
            .build();

        // Scroll helper function
        function scrollToBottom() {
            const msgList = document.getElementById(""messagesList"");
            msgList.scrollTop = msgList.scrollHeight;
        }

        // Helper to append bubble
        function appendBubble(fromUserId, message, sentAt = new Date()) {
            const wrapper = document.createElement('div');
            wrapper.className = 'msg ' + (fromUserId === currentUserId ? 'me' : 'other');
            const bubble = document.createElement('div');
            bubble.className = 'bubble';
            const text = document.createElement('div');
            text.className = 'text';
            text.textContent = message;
         ");
                WriteLiteral(@"   const time = document.createElement('span');
            time.className = 'time';
            try {
                const dt = new Date(sentAt);
                const hh = dt.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                time.textContent = hh;
            } catch {
                time.textContent = '';
            }
            bubble.appendChild(text);
            bubble.appendChild(time);
            wrapper.appendChild(bubble);
            document.getElementById('messagesList').appendChild(wrapper);
        }

        // Receive message handler
        connection.on(""ReceiveMessage"", function (fromUserId, message) {
            appendBubble(fromUserId, message, new Date());
            scrollToBottom();
        });

        // Start connection
        connection.start().catch(err => console.error(err.toString()));

        // Send message function
        function sendMessage() {
            if (isReadOnly) {
                return; // do nothing when read-only
      ");
                WriteLiteral(@"      }
            const messageInput = document.getElementById(""messageInput"");
            const message = messageInput.value.trim();
            if (message === """") return;

            connection.invoke(""SendMessage"", requestId, currentUserId, otherUserId, message)
                .catch(err => console.error(err.toString()));

            messageInput.value = """";
        }

        // Send on button click
        document.getElementById(""sendButton"").addEventListener(""click"", sendMessage);

        // Send on Enter key
        document.getElementById(""messageInput"").addEventListener(""keypress"", function (e) {
            if (e.key === ""Enter"") {
                sendMessage();
                e.preventDefault();
            }
        });

        // Auto scroll on page load
        scrollToBottom();
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<SkillSwapApp.Models.Message>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
