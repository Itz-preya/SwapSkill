#pragma checksum "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "d98ad2630c636273f5f0ed7673fe1bfce28144fb4e8b77e25694def84d8a0e43"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_Chat_Chat), @"mvc.1.0.view", @"/Views/Chat/Chat.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\_ViewImports.cshtml"
using SkillSwapApp

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\_ViewImports.cshtml"
using SkillSwapApp.Models

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"d98ad2630c636273f5f0ed7673fe1bfce28144fb4e8b77e25694def84d8a0e43", @"/Views/Chat/Chat.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"babd06148558f6456ba6e9c5301ac8325547b8bdf195fc8d90f900b28b66ce3d", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_Chat_Chat : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<
#nullable restore
#line 1 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
       IEnumerable<SkillSwapApp.Models.Message>

#line default
#line hidden
#nullable disable
    >
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
  
    ViewData["Title"] = "Chat";

#line default
#line hidden
#nullable disable

            WriteLiteral("\r\n<h2>Chat with Partner</h2>\r\n");
#nullable restore
#line 7 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
 if (ViewBag.IsReadOnly == true)
{

#line default
#line hidden
#nullable disable

            WriteLiteral("    <div class=\"alert alert-warning\" role=\"alert\" style=\"margin-bottom:10px;\">\r\n        This conversation is read-only because one of the participants changed their skill. You can still view the history, but sending new messages is disabled.\r\n    </div>\r\n");
#nullable restore
#line 12 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
}

#line default
#line hidden
#nullable disable

            WriteLiteral("\r\n<!-- Chat Box -->\r\n<div id=\"messagesList\" class=\"border rounded p-3 mb-3 bg-light\" style=\"height:400px; overflow-y:auto;\">\r\n");
#nullable restore
#line 16 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
     foreach (var msg in Model)
    {

#line default
#line hidden
#nullable disable

            WriteLiteral("        <div class=\"mb-2\">\r\n            <strong");
            BeginWriteAttribute("class", " class=\"", 627, "\"", 711, 1);
            WriteAttributeValue("", 635, 
#nullable restore
#line 19 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                             msg.FromUserId == ViewBag.CurrentUserId ? "text-primary" : "text-success"

#line default
#line hidden
#nullable disable
            , 635, 76, false);
            EndWriteAttribute();
            WriteLiteral(">\r\n                ");
            Write(
#nullable restore
#line 20 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                  msg.FromUserId == ViewBag.CurrentUserId ? "You" : "Partner"

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\r\n            </strong>: ");
            Write(
#nullable restore
#line 21 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                        msg.Content

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\r\n            <small class=\"text-muted\">(");
            Write(
#nullable restore
#line 22 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                        msg.SentAt.ToLocalTime()

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(")</small>\r\n        </div>\r\n");
#nullable restore
#line 24 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
    }

#line default
#line hidden
#nullable disable

            WriteLiteral("</div>\r\n\r\n<!-- Input -->\r\n<div class=\"input-group\">\r\n    <input type=\"text\" id=\"messageInput\" class=\"form-control\" placeholder=\"Type your message...\" autocomplete=\"off\" ");
            Write(
#nullable restore
#line 29 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                                                                                      ViewBag.IsReadOnly == true ? "disabled" : ""

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(" />\r\n    <div class=\"input-group-append\">\r\n        <button id=\"sendButton\" class=\"btn btn-primary\" ");
            Write(
#nullable restore
#line 31 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                          ViewBag.IsReadOnly == true ? "disabled" : ""

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(">Send</button>\r\n    </div>\r\n    <input type=\"hidden\" id=\"requestId\"");
            BeginWriteAttribute("value", " value=\"", 1359, "\"", 1385, 1);
            WriteAttributeValue("", 1367, 
#nullable restore
#line 33 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                ViewBag.RequestId

#line default
#line hidden
#nullable disable
            , 1367, 18, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"isReadOnly\"");
            BeginWriteAttribute("value", " value=\"", 1431, "\"", 1487, 1);
            WriteAttributeValue("", 1439, 
#nullable restore
#line 34 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                  ViewBag.IsReadOnly == true ? "true" : "false"

#line default
#line hidden
#nullable disable
            , 1439, 48, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"otherUserHidden\"");
            BeginWriteAttribute("value", " value=\"", 1538, "\"", 1566, 1);
            WriteAttributeValue("", 1546, 
#nullable restore
#line 35 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                                      ViewBag.OtherUserId

#line default
#line hidden
#nullable disable
            , 1546, 20, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <!-- Use CDN for SignalR -->\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js\"></script>\r\n\r\n    <script>\r\n        // Pass user IDs from Razor into JS variables\r\n        const currentUserId = \'");
                Write(
#nullable restore
#line 44 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                                ViewBag.CurrentUserId

#line default
#line hidden
#nullable disable
                );
                WriteLiteral("\';\r\n        const otherUserId = \'");
                Write(
#nullable restore
#line 45 "C:\Users\DELL\source\repos\SkillSwapApp\SkillSwapApp\Views\Chat\Chat.cshtml"
                              ViewBag.OtherUserId

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"';
        const requestId = parseInt(document.getElementById('requestId').value || '0');
        const isReadOnly = document.getElementById('isReadOnly').value === 'true';

        // Create connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl(""/chatHub"")
            .build();

        // Scroll helper function
        function scrollToBottom() {
            const msgList = document.getElementById(""messagesList"");
            msgList.scrollTop = msgList.scrollHeight;
        }

        // Receive message handler
        connection.on(""ReceiveMessage"", function (fromUserId, message) {
            const msgDiv = document.createElement(""div"");
            msgDiv.classList.add(""mb-2"");
            msgDiv.innerHTML =
                `<strong class=""${fromUserId === currentUserId ? ""text-primary"" : ""text-success""}"">
                    ${fromUserId === currentUserId ? ""You"" : ""Partner""}
                </strong>: ${message}`;
            document.getE");
                WriteLiteral(@"lementById(""messagesList"").appendChild(msgDiv);

            scrollToBottom();
        });

        // Start connection
        connection.start().catch(err => console.error(err.toString()));

        // Send message function
        function sendMessage() {
            if (isReadOnly) {
                return; // do nothing when read-only
            }
            const messageInput = document.getElementById(""messageInput"");
            const message = messageInput.value.trim();
            if (message === """") return;

            connection.invoke(""SendMessage"", requestId, currentUserId, otherUserId, message)
                .catch(err => console.error(err.toString()));

            messageInput.value = """";
        }

        // Send on button click
        document.getElementById(""sendButton"").addEventListener(""click"", sendMessage);

        // Send on Enter key
        document.getElementById(""messageInput"").addEventListener(""keypress"", function (e) {
            if (e.key === ");
                WriteLiteral("\"Enter\") {\r\n                sendMessage();\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        // Auto scroll on page load\r\n        scrollToBottom();\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<SkillSwapApp.Models.Message>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
